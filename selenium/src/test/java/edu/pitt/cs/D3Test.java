package edu.pitt.cs;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import static org.hamcrest.MatcherAssert.assertThat;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class D3Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--headless");
    driver = new ChromeDriver(options);
    //driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tEST3CATALOG() {
    // Test name: TEST-3-CATALOG
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | setWindowSize | 731x816 | 
    driver.manage().window().setSize(new Dimension(731, 816));
    // 3 | click | linkText=Catalog | 
    driver.findElement(By.linkText("Catalog")).click();
    // 4 | assertElementPresent | xpath=//img[@alt='Jennyanydots'] | 
    {
      List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Jennyanydots\']"));
      assert(elements.size() > 0);
      WebElement tmp = driver.findElement(By.xpath("//img[@alt=\'Jennyanydots\']"));
      //assertEquals("https://cs1632.appspot.com/images/cat1.jpg", tmp.getAttribute("src"));
    }
    // 5 | assertElementPresent | xpath=//img[@alt='Old Deuteronomy'] | 
    {
      List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Old Deuteronomy\']"));
      assert(elements.size() > 0);
      WebElement tmp = driver.findElement(By.xpath("//img[@alt=\'Old Deuteronomy\']"));
      //assertEquals("https://cs1632.appspot.com/images/cat2.jpg", tmp.getAttribute("src"));
    }
    // 6 | assertElementPresent | xpath=//img[@alt='Mistoffelees'] | 
    {
      List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'Mistoffelees\']"));
      assert(elements.size() > 0);

      WebElement tmp = driver.findElement(By.xpath("//img[@alt=\'Mistoffelees\']"));
      //assertEquals("https://cs1632.appspot.com/images/cat3.jpg", tmp.getAttribute("src"));
    }
  }

  @Test
  public void tEST9FEED() {
    // Test name: TEST-8-FEED
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | runScript | document.cookie = "1=false";document.cookie = "2=false";document.cookie = "3=false"; | 
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    // 3 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 4 | click | id=catnips | 
    driver.findElement(By.id("catnips")).click();
    // 5 | type | id=catnips | 9
    driver.findElement(By.id("catnips")).sendKeys("9");
    // 6 | click | css=.btn | 
    driver.findElement(By.cssSelector(".btn")).click();
    // 7 | assertText | id=feedResult | Nom, nom, nom.
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Nom, nom, nom."));
  }
  @Test
  public void tEST8FEEDACAT() {
    // Test name: TEST-7-FEED-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 3 | click | id=catnips | 
    driver.findElement(By.id("catnips")).click();
    // 4 | assertElementPresent | id=catnips | 
    {
      List<WebElement> elements = driver.findElements(By.id("catnips"));
      assert(elements.size() > 0);
    }
    // 5 | assertElementPresent | css=.btn | Feed
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".btn"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST10GREETACAT() {
    // Test name: TEST-9-GREET-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | click | linkText=Greet-A-Cat | 
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 3 | runScript | document.cookie = "1=false";document.cookie = "2=false";document.cookie = "3=false"; | 
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    // 4 | assertText | css=#greeting > h4 | Meow!Meow!Meow!
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!Meow!"));
  }
  @Test
  public void tEST11GREETACATWITHNAME() {
    // Test name: TEST-10-GREET-A-CAT-WITH-NAME
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/greet-a-cat/Jennyanydots | 
    //driver.get("https://cs1632.appspot.com/greet-a-cat/Jennyanydots");
    driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
    // 2 | assertText | css=#greeting > h4 | Meow! from Jennyanydots.
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow! from Jennyanydots."));
  }
  @Test
  public void tEST7RETURN() {
    // Test name: TEST-6-RETURN
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | runScript | document.cookie = "1=true";document.cookie = "2=false";document.cookie = "3=false"; | 
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    // 3 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | assertText | css=.list-group-item:nth-child(1) | Rented out
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("Rented out"));
    // 5 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 6 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
    // 7 | click | id=returnID | 
    driver.findElement(By.id("returnID")).click();
    // 8 | type | id=returnID | 1
    driver.findElement(By.id("returnID")).sendKeys("1");
    // 9 | click | css=.form-group:nth-child(4) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
    // 10 | assertText | css=.list-group-item:nth-child(1) | ID 1. Jennyanydots
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("ID 1. Jennyanydots"));
    // 11 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 12 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
    // 13 | assertText | id=returnResult | Success!
    assertThat(driver.findElement(By.id("returnResult")).getText(), is("Success!"));
  }
  @Test
  public void tEST2RESET() {
    // Test name: TEST-11-RESET
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | runScript | document.cookie = "1=true";document.cookie = "2=true";document.cookie = "3=true"; | 
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=true\";document.cookie = \"3=true\";");
    // 3 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 4 | assertText | css=.list-group-item:nth-child(1) | ID 1. Jennyanydots
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("ID 1. Jennyanydots"));
    // 5 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 6 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void tEST6RENT() {
    // Test name: TEST-5-RENT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 3 | runScript | document.cookie = "1=false";document.cookie = "2=false";document.cookie = "3=false"; | 
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    // 4 | click | id=rentID | 
    driver.findElement(By.id("rentID")).click();
    // 5 | type | id=rentID | 1
    driver.findElement(By.id("rentID")).sendKeys("1");
    // 6 | click | css=.form-group:nth-child(3) .btn | 
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 7 | assertText | css=.list-group-item:nth-child(1) | Rented out
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("Rented out"));
    // 8 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 9 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
    // 10 | assertText | id=rentResult | Success!
    assertThat(driver.findElement(By.id("rentResult")).getText(), is("Success!"));
  }
  @Test
  public void tEST5RENTACAT() {
    // Test name: TEST-4-RENT-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | setWindowSize | 768x816 | 
    driver.manage().window().setSize(new Dimension(768, 816));
    // 3 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | assertElementPresent | css=.form-group:nth-child(3) .btn | Rent
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(3) .btn"));
      assert(elements.size() > 0);
    }
    // 5 | assertElementPresent | css=.form-group:nth-child(4) .btn | Return
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(4) .btn"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST4LISTING() {
    // Test name: TEST-2-LISTING
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | runScript | document.cookie = "1=false";document.cookie = "2=false";document.cookie = "3=false"; | 
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    // 3 | assertElementPresent | css=.list-group-item:nth-child(1) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(1)"));
      assert(elements.size() > 0);
    }
    // 4 | assertText | xpath=//li[contains(.,'ID 1. Jennyanydots')] | ID 1. Jennyanydots
    assertThat(driver.findElement(By.xpath("//li[contains(.,\'ID 1. Jennyanydots\')]")).getText(), is("ID 1. Jennyanydots"));
    // 5 | assertElementPresent | css=.list-group-item:nth-child(2) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(2)"));
      assert(elements.size() > 0);
    }
    // 6 | assertText | xpath=//li[contains(.,'ID 2. Old Deuteronomy')] | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.xpath("//li[contains(.,\'ID 2. Old Deuteronomy\')]")).getText(), is("ID 2. Old Deuteronomy"));
    // 7 | assertElementPresent | css=.list-group-item:nth-child(3) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(3)"));
      assert(elements.size() > 0);
    }
    // 8 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void tEST1LINKS() {
    // Test name: TEST-1-LINKS
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ | 
    //driver.get("https://cs1632.appspot.com/");
    driver.get("http://localhost:8080/");
    // 2 | assertElementPresent | linkText=Catalog | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("Catalog"));
      assert(elements.size() > 0);
    }
    // 3 | click | linkText=Catalog | 
    driver.findElement(By.linkText("Catalog")).click();
    // 4 | assertText | linkText=Catalog | Catalog
    assertThat(driver.findElement(By.linkText("Catalog")).getText(), is("Catalog"));
    //assertEquals(driver.getCurrentUrl(), "https://cs1632.appspot.com/");
    // 5 | assertElementPresent | linkText=Rent-A-Cat | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("Rent-A-Cat"));
      assert(elements.size() > 0);
    }
    // 6 | click | linkText=Rent-A-Cat | 
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 7 | assertText | linkText=Rent-A-Cat | Rent-A-Cat
    assertThat(driver.findElement(By.linkText("Rent-A-Cat")).getText(), is("Rent-A-Cat"));
    //assertEquals(driver.getCurrentUrl(), "https://cs1632.appspot.com/rent-a-cat");
    // 8 | assertElementPresent | linkText=Feed-A-Cat | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("Feed-A-Cat"));
      assert(elements.size() > 0);
    }
    // 9 | click | linkText=Feed-A-Cat | 
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 10 | assertText | linkText=Feed-A-Cat | Feed-A-Cat
    assertThat(driver.findElement(By.linkText("Feed-A-Cat")).getText(), is("Feed-A-Cat"));
    //assertEquals(driver.getCurrentUrl(), "https://cs1632.appspot.com/feed-a-cat");
    // 11 | assertElementPresent | linkText=Greet-A-Cat | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("Greet-A-Cat"));
      assert(elements.size() > 0);
    }
    // 12 | click | linkText=Greet-A-Cat | 
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 13 | assertText | linkText=Greet-A-Cat | Greet-A-Cat
    assertThat(driver.findElement(By.linkText("Greet-A-Cat")).getText(), is("Greet-A-Cat"));
    //assertEquals(driver.getCurrentUrl(), "https://cs1632.appspot.com/greet-a-cat");
    // 14 | assertElementPresent | linkText=Reset | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("Reset"));
      assert(elements.size() > 0);
    }
    // 15 | click | linkText=Reset | 
    driver.findElement(By.linkText("Reset")).click();
    // 16 | assertText | linkText=Reset | Reset
    assertThat(driver.findElement(By.linkText("Reset")).getText(), is("Reset"));
    //assertEquals(driver.getCurrentUrl(), "https://cs1632.appspot.com/reset");
  }

  /* @Test
  public void dEFECT1FUNRENTACAT() {
    driver.get("https://cs1632-buggier.appspot.com/");
    driver.manage().window().setSize(new Dimension(768, 816));
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(4) .btn"));
      assert(elements.size() > 0);
    }
  }

  @Test
  public void dEFECT2FUNRENT() {
    driver.get("https://cs1632-buggier.appspot.com/");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    driver.findElement(By.id("rentID")).click();
    driver.findElement(By.id("rentID")).sendKeys("1");
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("Rented out"));
  }

  @Test
  public void dEFECT3FUNGREETACAT() {
    driver.get("https://cs1632-buggier.appspot.com/");
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!"));
  } */
}